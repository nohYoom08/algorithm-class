//1번
#pragma warning (disable:4996)
#include <stdio.h>
#include <stdlib.h>
#include <time.h>
int rFE(int arr[], int left, int right, int key) {
	if (left > right) {
		if (right >= 0)
			return right;	
		//엥 left아닌가? => 분할통치랑 다르게 이건 구간 한 쪽만 생각해야한다는 사실
		//그래서 애초에 고려대상도 아닌 반대쪽 구간을 생각하다가 이상한 값 도출하는
		//멍청한 행동하지 말 것.
		else
			return  -1;
	}
	int mid = (left+right)/2;
	if (key == arr[mid])
		return mid;
	else if (key > arr[mid])
		return rFE(arr,mid + 1, right,key);
	else
		return rFE(arr,left, mid - 1,key);
}
int main() {
	int N,*arr,key;
	int result;
	scanf("%d %d", &N,&key);
	arr = (int*)malloc(sizeof(int) * N);
	for (int i = 0; i < N; i++) 
		scanf("%d", &arr[i]);
	result = rFE(arr, 0, N - 1, key);
	
	printf("%d", result);

	return 0;
}


//2번
#pragma warning (disable:4996)
#include <stdio.h>
#include <stdlib.h>
#include <time.h>
int rFE(int arr[], int left, int right, int key) {
	int mid = (left+right)/2;
	while (left <= right) {		//재귀=>반복문의 형태 잘 생각(재귀 종료조건이 반복문의 조건문 반영)

		if (key == arr[mid])
			return mid;
		else if (key > arr[mid]) {
			left = mid + 1;
		}
		else {
			right = mid - 1;
		}
		mid = (left + right) / 2;	//반복문의 실행문은 재귀문의 다음 인자
	}

	if (left >= 0)
		return left;
	else
		return  right+1;
}
int main() {
	int N,*arr,key;
	int result;
	scanf("%d %d", &N,&key);
	arr = (int*)malloc(sizeof(int) * N);
	for (int i = 0; i < N; i++) 
		scanf("%d", &arr[i]);
	result = rFE(arr, 0, N - 1, key);
	
	printf("%d", result);

	return 0;
}


//3번
#pragma warning (disable:4996)
#include <stdio.h>
#include <stdlib.h>
#include <time.h>
int rFE(char str[], int N, int left, int right) {
	int mid;
	int i = 0;
	while (1) {
		mid = (left + right) / 2;
		if (left == right)
			return left;
		else if (str[i] == 'Y')
			left = mid + 1;
		else if (str[i] == 'N')
			right = mid;	//문제 조건 제대로 확인하고(필요 없는 정보인지 아닌지는 일단 다 읽고 판단)
		i++;
	}
	return mid;
}
int main() {
	int A, B, N;
	char *str;	//배열 전달할 때 자료형 맞는지 확인 (실수로 int* str로 냅뒀다가 대참사)
	int result;
	scanf("%d %d %d", &A, &B, &N);
	getchar();
	str = (char*)malloc(sizeof(char) * N);
	for (int i = 0; i < N; i++)
		scanf("%c", &str[i]);

	result = rFE(str, N, A, B);
	printf("%d", result);
	return 0;
}


